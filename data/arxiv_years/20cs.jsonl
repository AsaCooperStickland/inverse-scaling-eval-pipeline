{"prompt": "  The idle computers on a local area, campus area, or even wide area network\nrepresent a significant computational resource---one that is, however, also\nunreliable, heterogeneous, and opportunistic. This type of resource has been\nused effectively for embarrassingly parallel problems but not for more tightly\ncoupled problems. We describe an algorithm that allows branch-and-bound\nproblems to be solved in such environments. In designing this algorithm, we\nfaced two challenges: (1) scalability, to effectively exploit the variably\nsized pools of resources available, and (2) fault tolerance, to ensure the\nreliability of services. We achieve scalability through a fully decentralized\nalgorithm, by using a membership protocol for managing dynamically available\nresources. However, this fully decentralized design makes achieving reliability\neven more challenging. We guarantee fault tolerance in the sense that the loss\nof up to all but one resource will not affect the quality of the solution. For\npropagating information efficiently, we use epidemic communication for both the\nmembership protocol and the fault-tolerance mechanism. We have developed a\nsimulation framework that allows us to evaluate design alternatives. Results\nobtained in this framework suggest that our techniques can execute scalably and\nreliably.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  Clobber is a new two-player board game. In this paper, we introduce the\none-player variant Solitaire Clobber where the goal is to remove as many stones\nas possible from the board by alternating white and black moves. We show that a\ncheckerboard configuration on a single row (or single column) can be reduced to\nabout n/4 stones. For boards with at least two rows and two columns, we show\nthat a checkerboard configuration can be reduced to a single stone if and only\nif the number of stones is not a multiple of three, and otherwise it can be\nreduced to two stones. We also show that in general it is NP-complete to decide\nwhether an arbitrary Clobber configuration can be reduced to a single stone.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  This paper studies how the generalization ability of neurons can be affected\nby mutual processing of different signals. This study is done on the basis of a\nfeedforward artificial neural network. The mutual processing of signals can\npossibly be a good model of patterns in a set generalized by a neural network\nand in effect may improve generalization. In this paper it is discussed that\nthe interference may also cause a highly random generalization. Adaptive\nactivation functions are discussed as a way of reducing that type of\ngeneralization. A test of a feedforward neural network is performed that shows\nthe discussed random generalization.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  We explore optimal circular nonconvex partitions of regular k-gons. The\ncircularity of a polygon is measured by its aspect ratio: the ratio of the\nradii of the smallest circumscribing circle to the largest inscribed disk. An\noptimal circular partition minimizes the maximum ratio over all pieces in the\npartition. We show that the equilateral triangle has an optimal 4-piece\nnonconvex partition, the square an optimal 13-piece nonconvex partition, and\nthe pentagon has an optimal nonconvex partition with more than 20 thousand\npieces. For hexagons and beyond, we provide a general algorithm that approaches\noptimality, but does not achieve it.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  Decoupling the permanent identifier of a node from the node's\ntopology-dependent address is a promising approach toward completely scalable\nself-organizing networks. A group of proposals that have adopted such an\napproach use the same structure to: address nodes, perform routing, and\nimplement location service. In this way, the consistency of the routing\nprotocol relies on the coherent sharing of the addressing space among all nodes\nin the network. Such proposals use a logical tree-like structure where routes\nin this space correspond to routes in the physical level. The advantage of\ntree-like spaces is that it allows for simple address assignment and\nmanagement. Nevertheless, it has low route selection flexibility, which results\nin low routing performance and poor resilience to failures. In this paper, we\npropose to increase the number of paths using incomplete hypercubes. The design\nof more complex structures, like multi-dimensional Cartesian spaces, improves\nthe resilience and routing performance due to the flexibility in route\nselection. We present a framework for using hypercubes to implement indirect\nrouting. This framework allows to give a solution adapted to the dynamics of\nthe network, providing a proactive and reactive routing protocols, our major\ncontributions. We show that, contrary to traditional approaches, our proposal\nsupports more dynamic networks and is more robust to node failures.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  The asymptotic iterative decoding performances of low-density parity-check\n(LDPC) codes using min-sum (MS) and sum-product (SP) decoding algorithms on\nmemoryless binary-input output-symmetric (MBIOS) channels are analyzed in this\npaper. For MS decoding, the analysis is done by upper bounding the bit error\nprobability of the root bit of a tree code by the sequence error probability of\na subcode of the tree code assuming the transmission of the all-zero codeword.\nThe result is a recursive upper bound on the bit error probability after each\niteration. For SP decoding, we derive a recursively determined lower bound on\nthe bit error probability after each iteration. This recursive lower bound\nrecovers the density evolution equation of LDPC codes on the binary erasure\nchannel (BEC) with inequalities satisfied with equalities. A significant\nimplication of this result is that the performance of LDPC codes under SP\ndecoding on the BEC is an upper bound of the performance on all MBIOS channels\nwith the same uncoded bit error probability. All results hold for the more\ngeneral multi-edge type LDPC codes.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  This paper investigates the relationship between the rank weight distribution\nof a linear code and that of its dual code. The main result of this paper is\nthat, similar to the MacWilliams identity for the Hamming metric, the rank\nweight distribution of any linear code can be expressed as an analytical\nexpression of that of its dual code. Remarkably, our new identity has a similar\nform to the MacWilliams identity for the Hamming metric. Our new identity\nprovides a significant analytical tool to the rank weight distribution analysis\nof linear codes. We use a linear space based approach in the proof for our new\nidentity, and adapt this approach to provide an alternative proof of the\nMacWilliams identity for the Hamming metric. Finally, we determine the\nrelationship between moments of the rank distribution of a linear code and\nthose of its dual code, and provide an alternative derivation of the rank\nweight distribution of maximum rank distance codes.\n\n\n###\n\n", "completion": "20cs"}
{"prompt": "  In this paper, we study movements of simple polygonal chains in 3D. We say\nthat an open, simple polygonal chain can be straightened if it can be\ncontinuously reconfigured to a straight sequence of segments in such a manner\nthat both the length of each link and the simplicity of the chain are\nmaintained throughout the movement. The analogous concept for closed chains is\nconvexification: reconfiguration to a planar convex polygon. Chains that cannot\nbe straightened or convexified are called locked. While there are open chains\nin 3D that are locked, we show that if an open chain has a simple orthogonal\nprojection onto some plane, it can be straightened. For closed chains, we show\nthat there are unknotted but locked closed chains, and we provide an algorithm\nfor convexifying a planar simple polygon in 3D. All our algorithms require only\nO(n) basic ``moves'' and run in linear time.\n\n\n###\n\n", "completion": "20cs"}
